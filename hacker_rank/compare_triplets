use std::io;

fn main() {
    let mut alice_score = 0;
    let mut bob_score = 0;
    
    let mut alice_string = String::new();
    io::stdin().read_line(&mut alice_string).expect("Wrong reading Alice");
    alice_string.pop();
    
    let mut bob_string = String::new();
    io::stdin().read_line(&mut bob_string).expect("Wrong reading Bob");
    
    let alice_array_string: Vec<&str> = alice_string.split(" ").collect();
    let bob_array_string: Vec<&str> = bob_string.split(" ").collect();
    
    let mut indexer = 0;
    
    if alice_array_string.len() != bob_array_string.len() {
        println!("Error tests don't match!");
    }
    
    while indexer < alice_array_string.len() {

        if alice_array_string[indexer].parse::<u32>().unwrap() > bob_array_string[indexer].parse::<u32>().unwrap() {
            alice_score += 1;
        }
        
        else if alice_array_string[indexer].parse::<u32>().unwrap() < bob_array_string[indexer].parse::<u32>().unwrap() {
            bob_score += 1;
        }
        
        else {
            
        }
        
        indexer += 1;
    }
    
    println!("{} {}", alice_score, bob_score);
}
